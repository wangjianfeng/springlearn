<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.core.codec.StringDecoderTests" tests="42" skipped="0" failures="0" errors="0" timestamp="2016-11-10T07:40:10" hostname="XB-20161010YVDY" time="0.039">
  <properties/>
  <testcase name="decodeToMono[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.001"/>
  <testcase name="decode[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.002"/>
  <testcase name="decodeToMonoWithEmptyFlux[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.002"/>
  <testcase name="canDecode[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeEmptyString[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.002"/>
  <testcase name="decodeNewLine[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.005"/>
  <testcase name="decodeEmptyFlux[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeToMono[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decode[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeToMonoWithEmptyFlux[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="canDecode[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeEmptyString[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeNewLine[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.001"/>
  <testcase name="decodeEmptyFlux[NettyDataBufferFactory (UnpooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeToMono[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.001"/>
  <testcase name="decode[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeToMonoWithEmptyFlux[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="canDecode[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeEmptyString[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeNewLine[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.001"/>
  <testcase name="decodeEmptyFlux[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: true))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeToMono[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.015"/>
  <testcase name="decode[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeToMonoWithEmptyFlux[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="canDecode[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeEmptyString[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.002"/>
  <testcase name="decodeNewLine[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.001"/>
  <testcase name="decodeEmptyFlux[NettyDataBufferFactory (PooledByteBufAllocator(directByDefault: false))]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeToMono[DefaultDataBufferFactory (preferDirect=true)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decode[DefaultDataBufferFactory (preferDirect=true)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeToMonoWithEmptyFlux[DefaultDataBufferFactory (preferDirect=true)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.001"/>
  <testcase name="canDecode[DefaultDataBufferFactory (preferDirect=true)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeEmptyString[DefaultDataBufferFactory (preferDirect=true)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeNewLine[DefaultDataBufferFactory (preferDirect=true)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeEmptyFlux[DefaultDataBufferFactory (preferDirect=true)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeToMono[DefaultDataBufferFactory (preferDirect=false)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decode[DefaultDataBufferFactory (preferDirect=false)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeToMonoWithEmptyFlux[DefaultDataBufferFactory (preferDirect=false)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="canDecode[DefaultDataBufferFactory (preferDirect=false)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeEmptyString[DefaultDataBufferFactory (preferDirect=false)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeNewLine[DefaultDataBufferFactory (preferDirect=false)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <testcase name="decodeEmptyFlux[DefaultDataBufferFactory (preferDirect=false)]" classname="org.springframework.core.codec.StringDecoderTests" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
