<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.test.util.JsonPathExpectationsHelperTests" tests="42" skipped="0" failures="0" errors="0" timestamp="2016-11-10T08:56:17" hostname="XB-20161010YVDY" time="0.069">
  <properties/>
  <testcase name="assertValueIsEmptyForAnEmptyMap" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="assertValueIsNotEmptyForBoolean" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="exists" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsNumberForNonNumber" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.003"/>
  <testcase name="assertValueIsBoolean" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="assertValueWithNumberConversionAndMatcher" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.007"/>
  <testcase name="assertValueIsArrayForNonArray" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsNumber" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsNotEmptyForMap" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="existsForAnEmptyMap" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="assertValueIsString" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsNotEmptyForAnEmptyMap" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsStringForNonString" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="assertValueIsArray" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsNotEmptyForAnEmptyString" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="existsForIndefinatePathWithResults" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.042"/>
  <testcase name="assertValueIsEmptyForAnEmptyString" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="doesNotExist" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsNotEmptyForIndefinatePathWithEmptyResults" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="existsForAnEmptyArray" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="doesNotExistForAnEmptyArray" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="doesNotExistForAnEmptyMap" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="assertValueIsNotEmptyForIndefinatePathWithResults" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="assertValueIsBooleanForNonBoolean" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValue" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsEmptyForWhitespace" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="existsForIndefinatePathWithEmptyResults" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="doesNotExistForIndefinatePathWithResults" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsArrayForAnEmptyArray" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="assertValueIsMap" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsEmptyForAnEmptyArray" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsMapForNonMap" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="assertValueWithNumberConversion" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="doesNotExistForIndefinatePathWithEmptyResults" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="assertValueIsStringForAnEmptyString" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsEmptyForIndefinatePathWithEmptyResults" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsEmptyForIndefinatePathWithResults" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="assertValueIsNotEmptyForAnEmptyArray" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsNotEmptyForNumber" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.001"/>
  <testcase name="assertValueIsMapForAnEmptyMap" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsNotEmptyForString" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <testcase name="assertValueIsNotEmptyForArray" classname="org.springframework.test.util.JsonPathExpectationsHelperTests" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
